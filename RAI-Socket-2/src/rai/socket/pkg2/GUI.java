/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package rai.socket.pkg2;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Adam
 */
public class GUI extends javax.swing.JFrame {
   public Socket soket;
   BufferedReader buff;
    /**
     * Creates new form GUI
     */
    public GUI() {
       try {
           initComponents();
           buff = new BufferedReader(new InputStreamReader(soket.getInputStream()));
           ReadInput RI = new ReadInput(buff);
           RI.start();
       } catch (Exception ex) {
           System.out.println("someting error "+ex);
       }
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        JMessage = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextOUT = new javax.swing.JTextArea();
        JTextIP = new javax.swing.JTextField();
        JtextUser = new javax.swing.JTextField();
        IpButton = new javax.swing.JButton();
        ButtonOK = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        JMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JMessageActionPerformed(evt);
            }
        });
        JMessage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                JMessageKeyPressed(evt);
            }
        });

        TextOUT.setColumns(20);
        TextOUT.setRows(5);
        jScrollPane1.setViewportView(TextOUT);

        JTextIP.setText("Input IP Address");

        JtextUser.setText("Input username");
        JtextUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JtextUserActionPerformed(evt);
            }
        });

        IpButton.setText("ok");
        IpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IpButtonActionPerformed(evt);
            }
        });

        ButtonOK.setText("ok");
        ButtonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonOKActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(JMessage, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(JTextIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(IpButton)
                        .addGap(56, 56, 56)
                        .addComponent(JtextUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                        .addComponent(ButtonOK)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(JMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JTextIP)
                    .addComponent(IpButton)
                    .addComponent(JtextUser)
                    .addComponent(ButtonOK))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JtextUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JtextUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JtextUserActionPerformed

    private void IpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IpButtonActionPerformed
        // TODO add your handling code here:
        String ip=JTextIP.getText();
       try {
           System.out.println("ip"+ip);
           soket = new Socket(ip, 1234);
           
       } catch (IOException ex) {
           System.out.println("error "+ex);
       }
        
        
    }//GEN-LAST:event_IpButtonActionPerformed

    private void ButtonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonOKActionPerformed
        // TODO add your handling code here:
        String user;
        user = JtextUser.getText();
       try {
           System.out.println("user "+user);
           PrintWriter output = new PrintWriter(soket.getOutputStream(),true);
           output.println(user);
           output.flush();
           
       } catch (Exception ex) {
           System.out.println("someting error"+ex);;
       }
        
    }//GEN-LAST:event_ButtonOKActionPerformed

    private void JMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JMessageActionPerformed
        // TODO add your handling code here:
        String message;
        
        message=JMessage.getText();
       try {
           PrintWriter output = new PrintWriter(soket.getOutputStream(),true);
           output.println(message);
           output.flush();
           JMessage.setText("");
       } catch (IOException ex) {
           Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
       }
        
    }//GEN-LAST:event_JMessageActionPerformed

    private void JMessageKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JMessageKeyPressed
        // TODO add your handling code here:
        String message;
        
        message=JMessage.getText();
       try {
           System.out.println("message "+message);
           PrintWriter output = new PrintWriter(soket.getOutputStream(),true);
           output.println(message);
           output.flush();
           JMessage.setText("");
       } catch (IOException ex) {
           Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
       }
        
    }//GEN-LAST:event_JMessageKeyPressed

    
  class ReadInput extends Thread{

  private BufferedReader inputStream;

    public ReadInput(BufferedReader inputReader) {
        this.inputStream = inputStream;
    }

    @Override
    public void run() {
        try {
            String inputan;
            while ((inputan = inputStream.readLine()) != null) {
                TextOUT.append(inputan+"\n");
                System.out.println(">>");
            }
        } catch (Exception e) {
            System.out.println("something error");
        }
    }
    
}
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonOK;
    private javax.swing.JButton IpButton;
    private javax.swing.JTextField JMessage;
    private javax.swing.JTextField JTextIP;
    private javax.swing.JTextField JtextUser;
    private javax.swing.JTextArea TextOUT;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
