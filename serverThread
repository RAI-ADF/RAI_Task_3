/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package soket;

import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
//import java.net.ServerSocket;
import java.net.Socket;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author LENOVO
 */
public class ServerThread extends Thread{
    private Socket clientSocket = null;
    final Socket client;
    static Map<String, PrintWriter> users = new HashMap<>();
    String username = "";
    PrintWriter outputStream = null;
    BufferedReader inputStream = null;
//    public ServerThread(Socket fromClient){
//        super("serving client");
//        this.clientSocket = fromClient;
//    }
    public ServerThread(Socket client){
        this.client = client;
    }
    
    public void run(){
//            DataOutputStream outStream = null;
        try {
//            outStream = new DataOutputStream(clientSocket.getOutputStream());
//            BufferedReader inStream = new BufferedReader(
//                    new InputStreamReader(clientSocket.getInputStream()));
            inputStream = new BufferedReader(new InputStreamReader(client.getInputStream()));
            outputStream = new PrintWriter(client.getOutputStream());
            while(true){
                outputStream.print("Masukan username: ");
                username = inputStream.readLine();
                if(username == null){
                    return;
                }
                synchronized(users){
                if(!users.containsKey(username)){
                    outputStream.print("username has already been used"+"\n");
                    users.put(username, outputStream);
                    break;
                }
                }
            }
            outputStream.print("Accepted");
            String inputan, message;
            while((inputan = inputStream.readLine()) != null && !inputan.equals("quit")){
                message = "pesan " + username + " : " + inputan;
                System.out.println(message);
                for(PrintWriter p : users.values()){
                    p.print(message + "\n");
                    p.flush();
                }
            }
            if(username != null){ users.remove(username);}
            if(outputStream != null){users.remove(outputStream);}
            client.close();
//                System.out.println("Just connected with "+clientSocket.getRemoteSocketAddress());
//                String inputLine;
//                while((inputLine = inStream.readLine()) != null){
//                    System.out.println("client saya: "+inputLine);
//                    outStream.writeBytes("message received"+"\n");
//                }
//                clientSocket.close();
            
        } catch (IOException ex) {
            Logger.getLogger(ServerThread.class.getName()).log(Level.SEVERE, null, ex);
//        } finally {
//            try {
//                outStream.close();
//            } catch (IOException ex) {
//                Logger.getLogger(ServerThread.class.getName()).log(Level.SEVERE, null, ex);
//            }
        }
    }
}
